{
  "name": "admin-js-test",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "db:migrate": "ts-node node_modules/.bin/sequelize db:migrate",
    "db:migrate:undo": "ts-node node_modules/.bin/sequelize db:migrate:undo",
    "db:drop": "ts-node node_modules/.bin/sequelize db:drop",
    "db:create": "ts-node node_modules/.bin/sequelize db:create",
    "db:create:file": "npx sequelize-cli migration:create --name",
    "db:seed-dev": "ts-node node_modules/.bin/sequelize db:seed:all --seeders-path src/db/seeders/dev/",
    "db:reset": "npm run db:drop && npm run db:create && npm run db:migrate && npm run db:seed-dev",
    "db:migrate:status": "ts-node node_modules/.bin/sequelize db:migrate:status",
    "test:db:migrate": "NODE_ENV=test npm run db:migrate",
    "test:db:undo": "NODE_ENV=test npm run db:migrate:undo",
    "test:db:drop": "NODE_ENV=test npm run db:drop",
    "test:db:create": "NODE_ENV=test npm run db:create",
    "test:db:reset": "npm run test:db:drop && npm run test:db:create && npm run test:db:migrate",
    "test:db:seed": "NODE_ENV=test ts-node node_modules/.bin/sequelize db:seed:all --seeders-path src/db/seeders/test/",
    "start": "nest start",
    "start:dev": "NODE_ENV=development nest start --watch",
    "start:qa": "NODE_ENV=qa nest start --watch",
    "start:prod": "NODE_ENV=production node dist/src/main",
    "start:test": "NODE_ENV=test node dist/src/main",
    "start:debug": "nest start --debug --watch",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "NODE_ENV=test jest",
    "test:sequential": "jest --runInBand",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json --detectOpenHandles"
  },
  "dependencies": {
    "@admin-bro/express": "^3.1.0",
    "@admin-bro/nestjs": "^1.1.0",
    "@admin-bro/sequelize": "^1.2.1",
    "@adminjs/express": "^6.0.0",
    "@adminjs/nestjs": "^6.0.1",
    "@adminjs/sequelize": "^4.0.0",
    "@aws-sdk/client-cognito-identity-provider": "^3.303.0",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.3.1",
    "@nestjs/core": "^9.0.0",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/swagger": "^6.3.0",
    "@nestjs/terminus": "^9.2.2",
    "admin-bro": "^4.0.1",
    "admin-bro-expressjs": "^2.1.1",
    "admin-bro-sequelize": "^1.1.1",
    "adminjs": "^7.0.2",
    "amazon-cognito-identity-js": "^6.2.0",
    "aws-sdk": "^2.1359.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cls-hooked": "^4.2.2",
    "dotenv": "^16.0.3",
    "exceljs": "^4.3.0",
    "express": "^4.18.2",
    "express-formidable": "^1.2.0",
    "express-session": "^1.17.3",
    "google-libphonenumber": "^3.2.32",
    "moment": "^2.29.4",
    "mysql2": "^3.2.0",
    "nanoid": "^3.1.25",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.2.0",
    "sequelize": "^6.19.0",
    "sequelize-typescript": "^2.1.3",
    "uuid": "^9.0.0",
    "winston": "^3.8.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "29.2.4",
    "@types/multer": "^1.4.7",
    "@types/node": "18.11.18",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "29.3.1",
    "prettier": "^2.3.2",
    "sequelize-cli": "^5.5.1",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "29.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.1",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
